buildscript {
    ext.versions = [
        junitJupiterVersion : '5.0.0',
        apiguardian : '1.0.0',
        mockitoCore : '2.23.4',
        springBoot : '2.1.1.RELEASE',
        lombok : '1.18.4',
        mysqlConnecter : '8.0.13',
        cucumber : '2.3.1',
    ]
    ext.flyway = [
        url : 'jdbc:mysql://localhost:3306/my_db',
        user : 'root',
        password : 'mysql',
    ]
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "mysql:mysql-connector-java:${versions.mysqlConnecter}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}"
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.github.sasachichito'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
    jcenter()
    mavenCentral()
}

sourceSets {
    testAcceptance {
        compileClasspath = sourceSets.test.compileClasspath
        runtimeClasspath = output + sourceSets.test.runtimeClasspath
    }
}

dependencies {
    // main
    implementation "org.springframework.boot:spring-boot-starter-jdbc:${versions.springBoot}"
    implementation "org.springframework.boot:spring-boot-starter-web:${versions.springBoot}"
    runtimeOnly "mysql:mysql-connector-java:${versions.mysqlConnecter}"
    compileOnly "org.projectlombok:lombok:${versions.lombok}"

    // test,acceptance
    testImplementation("org.springframework.boot:spring-boot-starter-test:${versions.springBoot}") {
        exclude module: 'junit'
    }
    testImplementation "org.junit.jupiter:junit-jupiter-params:${versions.junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${versions.junitJupiterVersion}"
    testCompileOnly "org.apiguardian:apiguardian-api:${versions.apiguardian}"
    testCompile "org.mockito:mockito-core:${versions.mockitoCore}"
    testImplementation "io.cucumber:cucumber-java:${versions.cucumber}"
    testImplementation "io.cucumber:cucumber-junit:${versions.cucumber}"
}

task testAcceptance(type: Test) {
    testClassesDirs = sourceSets.testAcceptance.output
    classpath = sourceSets.testAcceptance.runtimeClasspath
}

flyway {
    url = flyway.url
    user = flyway.user
    password = flyway.password
}